{
	"compiler": {
		"version": "0.8.24+commit.e11b9ed9"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"constructor": {
					"details": "Initializes the contract setting the deployer as the initial owner."
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/Ownable.sol": "Ownable"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/Context.sol": {
			"keccak256": "0x732ed9a6d5f3c9c53cbc22c9cdfb48ef2796172a86d060e8fec0a0eafa6038db",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://4a19c14d4f436e0da41dc41a7ab1136e5642df5ea1432dad511ad0cb2e833c9d",
				"dweb:/ipfs/QmTttgkPXmJcEQMrFKtj4him4E823LR2CQHbX8ERhTy6JP"
			]
		},
		"contracts/Ownable.sol": {
			"keccak256": "0xfc89d035f3f82c3b8babe828d015ebc3b8100697233e0ffa7a3ffb921f19cd33",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://3bb01842ab8293dfa9bbd32f387ab8825459050e7db18a33168e59fad32f5aaa",
				"dweb:/ipfs/QmREjYm1xx42SSHBq8o9MDxndAvx6xKt5hbbYzQFsDy1YU"
			]
		}
	},
	"version": 1
}